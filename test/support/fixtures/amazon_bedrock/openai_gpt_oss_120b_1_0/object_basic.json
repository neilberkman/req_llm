{
  "request": {
    "body": {
      "b64": "eyJtYXhfdG9rZW5zIjo1MDAsIm1lc3NhZ2VzIjpbeyJjb250ZW50IjoiR2VuZXJhdGUgYSBzb2Z0d2FyZSBlbmdpbmVlciBwcm9maWxlIiwicm9sZSI6InVzZXIifV0sIm1vZGVsIjoib3BlbmFpLmdwdC1vc3MtMTIwYi0xOjAiLCJzZWVkIjo0Miwic3RyZWFtIjpmYWxzZSwidGVtcGVyYXR1cmUiOjAuMCwidG9vbF9jaG9pY2UiOnsiZnVuY3Rpb24iOnsibmFtZSI6InN0cnVjdHVyZWRfb3V0cHV0In0sInR5cGUiOiJmdW5jdGlvbiJ9LCJ0b29scyI6W3siZnVuY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJHZW5lcmF0ZSBzdHJ1Y3R1cmVkIG91dHB1dCBtYXRjaGluZyB0aGUgcHJvdmlkZWQgc2NoZW1hIiwibmFtZSI6InN0cnVjdHVyZWRfb3V0cHV0IiwicGFyYW1ldGVycyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6ZmFsc2UsInByb3BlcnRpZXMiOnsiYWdlIjp7ImRlc2NyaXB0aW9uIjoiUGVyc29uJ3MgYWdlIGluIHllYXJzIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNvbidzIGZ1bGwgbmFtZSIsInR5cGUiOiJzdHJpbmcifSwib2NjdXBhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IlBlcnNvbidzIGpvYiBvciBwcm9mZXNzaW9uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSIsImFnZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoiZnVuY3Rpb24ifV19"
    },
    "canonical_json": {
      "max_tokens": 500,
      "messages": [
        {
          "content": "Generate a software engineer profile",
          "role": "user"
        }
      ],
      "model": "openai.gpt-oss-120b-1:0",
      "seed": 42,
      "stream": false,
      "temperature": 0.0,
      "tool_choice": {
        "function": {
          "name": "structured_output"
        },
        "type": "function"
      },
      "tools": [
        {
          "function": {
            "description": "Generate structured output matching the provided schema",
            "name": "structured_output",
            "parameters": {
              "additionalProperties": false,
              "properties": {
                "age": {
                  "description": "Person's age in years",
                  "minimum": 1,
                  "type": "integer"
                },
                "name": {
                  "description": "Person's full name",
                  "type": "string"
                },
                "occupation": {
                  "description": "Person's job or profession",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "age"
              ],
              "type": "object"
            }
          },
          "type": "function"
        }
      ]
    },
    "headers": {
      "accept-encoding": [
        "gzip"
      ],
      "authorization": "[REDACTED:authorization]",
      "content-type": [
        "application/json"
      ],
      "host": [
        "bedrock-runtime.us-east-1.amazonaws.com"
      ],
      "user-agent": [
        "req/0.5.15"
      ],
      "x-amz-content-sha256": [
        "7383be614b9b744a9def86ad5ccf547a733ba542128380e20971e6c2ebb5b922"
      ],
      "x-amz-date": [
        "20251101T005628Z"
      ]
    },
    "method": "post",
    "url": "https://bedrock-runtime.us-east-1.amazonaws.com/model/openai.gpt-oss-120b-1:0/invoke"
  },
  "response": {
    "body": {
      "choices": [
        {
          "finish_reason": "tool_calls",
          "index": 0,
          "logprobs": null,
          "message": {
            "content": "<reasoning>User wants a software engineer profile. Likely need to output structured data using the function. The schema: age (number), name (string), occupation optional. So we need to call the function with appropriate values. Provide a profile. Let's generate a plausible profile: name \"Alex Johnson\", age 29, occupation \"Software Engineer\". Use function.</reasoning>Here’s a concise software engineer profile:\n\n- **Name:** Alex Johnson  \n- **Age:** 29  \n- **Occupation:** Software Engineer  \n\nFeel free to let me know if you’d like additional details such as skills, experience, or education!",
            "refusal": null,
            "role": "assistant",
            "tool_calls": [
              {
                "function": {
                  "arguments": "{\n  \"age\": 29,\n  \"name\": \"Alex Johnson\",\n  \"occupation\": \"Software Engineer\"\n}",
                  "name": "structured_output"
                },
                "id": "chatcmpl-tool-a3bf21a2a74d43dcaada828836e00e57",
                "type": "function"
              }
            ]
          }
        }
      ],
      "created": 1761958589,
      "id": "chatcmpl-17733f48-b037-4244-a128-8ea70c1610ce",
      "model": "openai.gpt-oss-120b-1:0",
      "object": "chat.completion",
      "service_tier": "auto",
      "usage": {
        "completion_tokens": 171,
        "prompt_tokens": 151,
        "total_tokens": 322
      }
    },
    "headers": {
      "connection": [
        "keep-alive"
      ],
      "content-type": [
        "application/json"
      ],
      "date": [
        "Sat, 01 Nov 2025 00:56:30 GMT"
      ],
      "x-amzn-bedrock-input-token-count": [
        "151"
      ],
      "x-amzn-bedrock-invocation-latency": [
        "963"
      ],
      "x-amzn-bedrock-output-token-count": [
        "171"
      ],
      "x-amzn-requestid": [
        "c875a3e5-f940-4053-9ca4-3be261a16cdc"
      ]
    },
    "status": 200
  }
}